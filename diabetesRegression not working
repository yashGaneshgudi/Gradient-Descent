import pandas as pd
import numpy as np
import math

# Range of x-values from 0-180
iterations = 1000000000

data = pd.read_csv("diabetes.csv")
features = ["Glucose","BloodPressure","BMI","DiabetesPedigreeFunction","Age"]
x_train = data.loc[:, features]
y_train = data.loc[:, ["Outcome"]]

x_train.to_csv("x_train.csv", index=False)
y_train.to_csv("y_train.csv", index=False)

dataLength = len(open("x_train.csv").readlines()) - 1
# Error Function

def errorFunction(m, c, id):
    error = 0
    for i in range(dataLength):
        error += (y_train["Outcome"][i] - m * x_train[id][i] + c) ** 2
    return error / dataLength
# Derivatives
def dm(m, c, id):
    sum = 0
    for i in range(dataLength):
        sum += (1/(1 + math.exp(-m * x_train[id][i] - c)) - y_train["Outcome"][i]) * x_train[id][i]
    return 2 * sum / dataLength

def dc(m, c, id):
    sum = 0
    for i in range(dataLength):
        sum += 1 /1 + (math.exp(- m * x_train[id][i] - c) )- y_train["Outcome"][i]
    return 2 * sum / dataLength

def compare(new,old):
    if new < old:
        return 'IMPROVEMENT'
    if new == old:
        return 'SAME'
    else:
        return 'WORSE'

# Starting m,c value
m = 0
c = 0
m2 = 0
c2 = 0
m3 = 0
c3 = 0
m4 = 0
c4 = 0
m5 = 0
c5 = 0

# Gradient Descent 
for i in range(iterations):
    oldm=m
    oldc=c
    oldm2=m2
    oldc2=c2
    oldm3=m3
    oldc3 = c3
    oldm4=m4
    oldc4=c4
    oldm5=m5
    oldc5=c5

    


    m = m - dm(m, c, "Glucose") * 0.000000000000000001
    c = c - dc(m, c, "Glucose") * 0.000000000000000001
    m2 = m2 - dm(m2, c2, "BloodPressure") * 0.000000000000000001
    c2 = c2 - dc(m2, c2, "BloodPressure") * 0.000000000000000001
    m3 = m3 - dm(m3, c3, "BMI") * 0.000000000000000001
    c3 = c3 - dc(m3, c3, "BMI") *0.000000000000000001
    m4 = m4 - dm(m4, c4, "DiabetesPedigreeFunction") * 0.0000001
    c4 = c4 - dc(m4, c4, "DiabetesPedigreeFunction") * 0.0000001
    m5 = m5 - dm(m5, c5, "Age") * 0.000000000000000001
    c5 = c5 - dc(m5, c5, "Age") * 0.000000000000000001
    print()
    print(i)
    print('m1c1',compare(errorFunction(m,c,'Glucose'),errorFunction(oldm,oldc,'Glucose')),' m2c2', compare(errorFunction(m2,c2,"BloodPressure"),errorFunction(oldm2,oldc2,"BloodPressure")) ,' m3c3 ', compare(errorFunction(m3,c3, "BMI"),errorFunction(oldm3,oldc3, "BMI")) ,' m4c4 ',compare(errorFunction(m4,c4, "DiabetesPedigreeFunction"),errorFunction(oldm4,oldc4, "DiabetesPedigreeFunction")) ,' m5c5 ', compare(errorFunction(m5,c5, "Age"),errorFunction(oldm5,oldc5, "Age")))
    print()
    print()




